name: Deploy Lambda Functions

on:
  push:
    branches: [ main ]
    paths: 
      - 'lambda-functions/**'
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  deploy-file-detector:
    name: Deploy File Detector Lambda
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies for file-detector
      run: |
        cd lambda-functions/file-detector
        pip install -r requirements.txt -t .

    - name: Create deployment package for file-detector
      run: |
        cd lambda-functions/file-detector
        zip -r ../../file-detector-deployment.zip .

    - name: Deploy file-detector Lambda function
      run: |
        aws lambda update-function-code \
          --function-name ecs-pipeline-trigger \
          --zip-file fileb://file-detector-deployment.zip

    - name: Update file-detector environment variables
      run: |
        aws lambda update-function-configuration \
          --function-name ecs-pipeline-trigger \
          --environment Variables='{
            STEP_FUNCTIONS_ARN=${{ secrets.STEP_FUNCTIONS_ARN }}
          }'

  deploy-file-archiver:
    name: Deploy File Archiver Lambda
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies for file-archiver
      run: |
        cd lambda-functions/file-archiver
        pip install -r requirements.txt -t .

    - name: Create deployment package for file-archiver
      run: |
        cd lambda-functions/file-archiver
        zip -r ../../file-archiver-deployment.zip .

    - name: Deploy file-archiver Lambda function
      run: |
        aws lambda update-function-code \
          --function-name ecommerce-file-archiver \
          --zip-file fileb://file-archiver-deployment.zip

    - name: Update file-archiver environment variables
      run: |
        aws lambda update-function-configuration \
          --function-name ecommerce-file-archiver \
          --environment Variables='{
            S3_BUCKET_NAME=${{ secrets.S3_BUCKET_NAME }}
          }'
